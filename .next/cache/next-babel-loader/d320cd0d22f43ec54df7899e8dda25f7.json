{"ast":null,"code":"import { recognition } from \"./speechStart\";\nconst MIC = `mic`;\nexport const ret = \"\";\nexport const saveMic = coordsObj => {\n  localStorage.setItem(COORDS, JSON.stringify(coordsObj));\n};\nexport const initMic = () => {\n  const loadedMIC = localStorage.getItem(MIC);\n\n  if (loadedMIC !== \"prompt\") {\n    navigator.permissions.query({\n      name: \"microphone\"\n    }).then(function (permissionStatus) {\n      // granted, denied, prompt\n      localStorage.setItem(MIC, permissionStatus.state);\n\n      permissionStatus.granted = function () {\n        localStorage.setItem(MIC, permissionStatus.state);\n      };\n    });\n  }\n\n  recognition.start();\n};","map":{"version":3,"sources":["C:/Users/panda/donga/prepare/front/Speech/micSet.js"],"names":["recognition","MIC","ret","saveMic","coordsObj","localStorage","setItem","COORDS","JSON","stringify","initMic","loadedMIC","getItem","navigator","permissions","query","name","then","permissionStatus","state","granted","start"],"mappings":"AAAA,SAASA,WAAT,QAA4B,eAA5B;AAEA,MAAMC,GAAG,GAAI,KAAb;AAGA,OAAO,MAAMC,GAAG,GAAC,EAAV;AAEP,OAAO,MAAMC,OAAO,GAAIC,SAAD,IAAe;AAClCC,EAAAA,YAAY,CAACC,OAAb,CAAqBC,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeL,SAAf,CAA7B;AACH,CAFM;AAIP,OAAO,MAAMM,OAAO,GAAG,MAAM;AACzB,QAAMC,SAAS,GAAGN,YAAY,CAACO,OAAb,CAAqBX,GAArB,CAAlB;;AACA,MAAIU,SAAS,KAAK,QAAlB,EAA4B;AACxBE,IAAAA,SAAS,CAACC,WAAV,CACKC,KADL,CACW;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADX,EAEKC,IAFL,CAEU,UAAUC,gBAAV,EAA4B;AAC9B;AACAb,MAAAA,YAAY,CAACC,OAAb,CAAqBL,GAArB,EAA0BiB,gBAAgB,CAACC,KAA3C;;AACAD,MAAAA,gBAAgB,CAACE,OAAjB,GAA2B,YAAY;AACnCf,QAAAA,YAAY,CAACC,OAAb,CAAqBL,GAArB,EAA0BiB,gBAAgB,CAACC,KAA3C;AACH,OAFD;AAGH,KARL;AASH;;AACDnB,EAAAA,WAAW,CAACqB,KAAZ;AACH,CAdM","sourcesContent":["import { recognition } from \"./speechStart\";\r\n\r\nconst MIC = `mic`;\r\n\r\n\r\nexport const ret=\"\";\r\n\r\nexport const saveMic = (coordsObj) => {\r\n    localStorage.setItem(COORDS, JSON.stringify(coordsObj));\r\n}\r\n\r\nexport const initMic = () => {\r\n    const loadedMIC = localStorage.getItem(MIC);\r\n    if (loadedMIC !== \"prompt\") {\r\n        navigator.permissions\r\n            .query({ name: \"microphone\" })\r\n            .then(function (permissionStatus) {\r\n                // granted, denied, prompt\r\n                localStorage.setItem(MIC, permissionStatus.state);\r\n                permissionStatus.granted = function () {\r\n                    localStorage.setItem(MIC, permissionStatus.state);\r\n                };\r\n            });\r\n    }\r\n    recognition.start();\r\n}"]},"metadata":{},"sourceType":"module"}