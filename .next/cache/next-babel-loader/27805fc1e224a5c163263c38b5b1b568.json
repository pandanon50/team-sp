{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  todos: [{\n    id: 1,\n    textValue: \"시작하기!\",\n    checked: false\n  }]\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: 2,\n    textValue: \"\".concat(data),\n    checked: false\n  };\n};\n\nvar ADD_POST = \"ADD_POST\";\nvar CHECKED_POST = \"CHECKED_POST\"; //보류\n\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST,\n    data: data\n  };\n};\nexport var checkedPost = function checkedPost(id) {\n  return {\n    type: CHECKED_POST,\n    id: id\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      console.log(action.data);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        todos: [dummyPost(action.data)].concat(_toConsumableArray(state.todos))\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/panda/donga/prepare/front/reducers/post.js"],"names":["initialState","todos","id","textValue","checked","dummyPost","data","ADD_POST","CHECKED_POST","addPost","type","checkedPost","reducer","state","action","console","log"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAE,CACL;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,SAAS,EAAE,OAFb;AAGEC,IAAAA,OAAO,EAAE;AAHX,GADK;AADmB,CAArB;;AAUP,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAU;AAC1B,SAAO;AACLJ,IAAAA,EAAE,EAAE,CADC;AAELC,IAAAA,SAAS,YAAKG,IAAL,CAFJ;AAGLF,IAAAA,OAAO,EAAE;AAHJ,GAAP;AAKD,CAND;;AAQA,IAAMG,QAAQ,GAAG,UAAjB;AACA,IAAMC,YAAY,GAAG,cAArB,C,CAAqC;;AAErC,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACH,IAAD,EAAU;AAC/B,SAAO;AACLI,IAAAA,IAAI,EAAEH,QADD;AAELD,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CALM;AAOP,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACT,EAAD,EAAQ;AACjC,SAAO;AACLQ,IAAAA,IAAI,EAAEF,YADD;AAELN,IAAAA,EAAE,EAAFA;AAFK,GAAP;AAID,CALM;;AAOP,IAAMU,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBb,YAAyB;AAAA,MAAXc,MAAW;;AAChD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAKH,QAAL;AACEQ,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACR,IAAnB;AACA,6CACKO,KADL;AAEEZ,QAAAA,KAAK,GAAGI,SAAS,CAACS,MAAM,CAACR,IAAR,CAAZ,4BAA8BO,KAAK,CAACZ,KAApC;AAFP;;AAIF;AACE,aAAOY,KAAP;AARJ;AAUD,CAXD;;AAaA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n  todos: [\r\n    {\r\n      id: 1,\r\n      textValue: \"시작하기!\",\r\n      checked: false,\r\n    },\r\n  ],\r\n};\r\n\r\nconst dummyPost = (data) => {\r\n  return {\r\n    id: 2,\r\n    textValue: `${data}`,\r\n    checked: false,\r\n  };\r\n};\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nconst CHECKED_POST = \"CHECKED_POST\"; //보류\r\n\r\nexport const addPost = (data) => {\r\n  return {\r\n    type: ADD_POST,\r\n    data: data,\r\n  };\r\n};\r\n\r\nexport const checkedPost = (id) => {\r\n  return {\r\n    type: CHECKED_POST,\r\n    id,\r\n  };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      console.log(action.data);\r\n      return {\r\n        ...state,\r\n        todos: [dummyPost(action.data), ...state.todos],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}