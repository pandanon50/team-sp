{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nvar initialState = {\n  todos: [{\n    id: 1,\n    textValue: \"시작하기!\",\n    checked: false\n  }]\n};\nvar dummyPost = {\n  id: 2,\n  textValue: \"더미데이터\",\n  checked: false\n};\nexport var add = function add(data) {\n  return {\n    type: \"ADD_DO\",\n    data: data\n  };\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case \"ADD_DO\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        post: {\n          todos: [dummyPost].concat(_toConsumableArray(state.todos))\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/panda/donga/prepare/front/reducers/index.js"],"names":["HYDRATE","initialState","todos","id","textValue","checked","dummyPost","add","data","type","rootReducer","state","action","payload","post"],"mappings":";;;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CACL;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,SAAS,EAAE,OAFb;AAGEC,IAAAA,OAAO,EAAE;AAHX,GADK;AADY,CAArB;AAUA,IAAMC,SAAS,GAAG;AAChBH,EAAAA,EAAE,EAAE,CADY;AAEhBC,EAAAA,SAAS,EAAE,OAFK;AAGhBC,EAAAA,OAAO,EAAE;AAHO,CAAlB;AAMA,OAAO,IAAME,GAAG,GAAG,SAANA,GAAM,CAACC,IAAD,EAAU;AAC3B,SAAO;AACLC,IAAAA,IAAI,EAAE,QADD;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;;AAOP,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBV,YAAyB;AAAA,MAAXW,MAAW;;AACpD,UAAQA,MAAM,CAACH,IAAf;AACE,SAAKT,OAAL;AACE,6CAAYW,KAAZ,GAAsBC,MAAM,CAACC,OAA7B;;AACF,SAAK,QAAL;AACE,6CACKF,KADL;AAEEG,QAAAA,IAAI,EAAE;AACJZ,UAAAA,KAAK,GAAGI,SAAH,4BAAiBK,KAAK,CAACT,KAAvB;AADD;AAFR;;AAMF;AACE,aAAOS,KAAP;AAXJ;AAaD,CAdD;;AAgBA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\n\r\nconst initialState = {\r\n  todos: [\r\n    {\r\n      id: 1,\r\n      textValue: \"시작하기!\",\r\n      checked: false,\r\n    },\r\n  ],\r\n};\r\n\r\nconst dummyPost = {\r\n  id: 2,\r\n  textValue: \"더미데이터\",\r\n  checked: false,\r\n};\r\n\r\nexport const add = (data) => {\r\n  return {\r\n    type: \"ADD_DO\",\r\n    data,\r\n  };\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case HYDRATE:\r\n      return { ...state, ...action.payload };\r\n    case \"ADD_DO\":\r\n      return {\r\n        ...state,\r\n        post: {\r\n          todos: [dummyPost, ...state.todos],\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}